@using EntityLayer.Concrete
@model Blog
@{
    ViewData["Title"] = "InsertWriter";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}
<div class="col-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            @using (Html.BeginForm("InsertBlog", "Blog", FormMethod.Post))
            {
                <div>
                    <label>Blog Başlığı</label>
                    @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.BlogTitle, "", new { @class = "text-danger" })
                </div>
                <br />

                <div>
                    <label>Kategori</label>
                    @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.categoryDropDownList, new { @class = "form-control" })
                </div>
                <br />
                <div>
                    <label>Blog İçeriği</label>
                    @Html.TextAreaFor(x => x.BlogContent, 15, 3, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.BlogContent, "", new { @class = "text-danger" })
                    <br />
                </div>
                <div>
                    <label>Küçük Resim</label>
                    @Html.TextBoxFor(x => x.BlogThumbnailImage, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.BlogThumbnailImage, "", new { @class = "text-danger" })
                </div>
                <br />
                <div>
                    <label>Büyük Resim</label>
                    @Html.TextBoxFor(x => x.BlogImage, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.BlogImage, "", new { @class = "text-danger" })
                </div>
                <br />
                <button class=" btn btn-gradient-primary mr-2">Bloğu Ekle</button>
            }

        </div>
    </div>
</div>